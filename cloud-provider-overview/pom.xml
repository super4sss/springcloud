<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>springcloud</artifactId>
    <groupId>com.ysd.springcloud</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
	<artifactId>cloud-provider-overview</artifactId>
<!--  <groupId>com.ysd</groupId>-->
<!--	<name>ysdOverview Maven Webapp</name>-->
<!--	<url>http://maven.apache.org</url>-->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
	</properties>
	
	<dependencies>
<!--    该项目只用jfinal-->
		<dependency>
			<groupId>com.jfinal</groupId>
			<artifactId>jfinal</artifactId>
			<version>4.8</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.jfinal</groupId>-->
<!--			<artifactId>cos</artifactId>-->
<!--			<version>2017.5</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.jfinal</groupId>-->
<!--			<artifactId>jetty-server</artifactId>-->
<!--			<version>8.1.8</version>-->
<!--      <scope>compile</scope>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.alibaba</groupId>-->
<!--			<artifactId>druid</artifactId>-->
<!--			<version>1.0.29</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
<!--			<version>5.1.44</version>-->
		</dependency>
<!--		<dependency>-->
<!--			<groupId>log4j</groupId>-->
<!--			<artifactId>log4j</artifactId>-->
<!--			<version>1.2.16</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.alibaba</groupId>-->
<!--			<artifactId>fastjson</artifactId>-->
<!--			<version>1.2.31</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.apache.httpcomponents</groupId>-->
<!--			<artifactId>fluent-hc</artifactId>-->
<!--			<version>4.5.3</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.apache.commons</groupId>-->
<!--			<artifactId>commons-lang3</artifactId>-->
<!--			<version>3.5</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.jsoup</groupId>-->
<!--			<artifactId>jsoup</artifactId>-->
<!--			<version>1.9.2</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
			<version>1.3.5</version>
		</dependency>
        <dependency>
            <groupId>cn.afterturn</groupId>
            <artifactId>easypoi-base</artifactId>
            <version>3.2.0</version>
        </dependency>
        <dependency>
		    <groupId>net.dreamlu</groupId>
		    <artifactId>JFinal-event</artifactId>
		    <version>2.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.bytedeco.javacpp-presets</groupId>
			<artifactId>ffmpeg-platform</artifactId>
			<version>4.0.1-1.4.2</version>
		</dependency>

    <!--  公共模块-->
    <dependency>
      <groupId>com.ysd.springcloud</groupId>
      <artifactId>cloud-api-common</artifactId>
      <version>${project.version}</version>
    </dependency>

<!--springboot-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>5.2.2.RELEASE</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
      <version>2.2.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
      <version>2.2.2.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-commons</artifactId>
      <version>2.2.1.RELEASE</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-netflix-eureka-client</artifactId>
      <version>2.2.1.RELEASE</version>
    </dependency>

    <!--热部署-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.alibaba.cloud</groupId>
      <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>1.1.16</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>5.2.2.RELEASE</version>
    </dependency>
	</dependencies>
	
	<!-- 使用aliyun maven -->
	<repositories>
		<repository>
			<id>aliyun</id>
			<name>aliyun</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
		</repository>
	</repositories>
	
	<build>
		<!-- 打包目录 -->
		<directory>target</directory>
		<!-- 打包名称 -->
		<finalName>ysdOverview</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- java8 保留参数名编译参数 -->
					<compilerArgument>-parameters</compilerArgument>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-war-plugin</artifactId>-->
<!--				<configuration>-->
<!--					<webResources>-->
<!--			            <resource>-->
<!--							&lt;!&ndash;suppress UnresolvedMavenProperty &ndash;&gt;-->
<!--                    <directory>deploy/${deploy.env}</directory>-->
<!--							<targetPath>WEB-INF/classes</targetPath>-->
<!--			            </resource>-->
<!--			          </webResources>-->
<!--				</configuration>-->
<!--			</plugin>-->

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.0.4.RELEASE</version>
        <configuration>
          <includeSystemScope>true</includeSystemScope>
          <!-- 指定该Main Class为全局的唯一入口 -->
          <mainClass>com.ysd.springcloud.OverviewProvider8005</mainClass>
<!--          <executable>true</executable>-->
          <layout>ZIP</layout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中-->
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <!-- 覆盖原有文件 -->
              <overwrite>true</overwrite>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <!-- 待处理的资源定义 -->
              <resources>
                <resource>
                  <!-- 指定resources插件处理哪个目录下的资源文件 -->
<!--                  <directory>deploy/${package.environment}</directory>-->
<!--                  <directory>deploy/dev</directory>-->
                  <directory>deploy/prd</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
<!--            <inherited></inherited>-->
          </execution>
        </executions>
      </plugin>

		</plugins>

    <resources>
      <resource>
        <!--打包该目录下的 application.yml -->
        <directory>src/main/resources</directory>
        <includes>
          <include>*.yml</include>
          <include>*.properties</include>
        </includes>
        <!-- 启用过滤 即该资源中的变量将会被过滤器中的值替换 -->
        <filtering>true</filtering>
      </resource>
    </resources>

    <!-- 定义 filter,即该资源中的值将会用来替换同名属性（设置 filtering 为 true 的资源中的属性）-->
<!--    <filters>-->
<!--      <filter>-->
<!--&lt;!&ndash;        deploy/${profiles.active}/*.yml&ndash;&gt;-->
<!--        deploy/${profiles.active}/config.properties-->
<!--      </filter>-->
<!--    </filters>-->
	</build>
  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <package.environment>dev</package.environment>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <package.environment>test</package.environment>
      </properties>
    </profile>
    <profile>
      <id>prd</id>
      <properties>
        <package.environment>prd</package.environment>
      </properties>
    </profile>
  </profiles>



</project>
